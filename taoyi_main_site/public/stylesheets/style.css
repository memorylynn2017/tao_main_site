/* 一般为前端驱动，先搞清楚每一个界面的生成及命名，都会改变网站整个目录结构，功能构造等等。。。详情浏览主站原型。。。 */


/* 在这里也可以在EXPRESS配置为托管静态资源static，最好使用面向对象的sass/less来编绎成CSS以便于后期维护 */


/* 大多数的CSS也可以先在其所属模板上写，为了尽早了解网站原型，必须尽快确定好站点架构及界面。。所以可以先把主页面先渲染出来先，以分离出多数的共用组件部分。 */

/* 比如刚开始写模板的时候觉得模板会很多，慢慢地开始明白很多公共组件都是通过路由请求渲染出来的，通过模板+数据源组装而成:

第一、handlebar自身有一套类JS逻辑的轻量极语法结构，比如当一定条件下该模板是显示还是隐藏、当标题是哪一个的时候遍历出什么内容等都可以通过自身内置helper或者自定义helper来决定。虽然简单，用起来灵活度要求较高;

第二、当分好各个模板命名空间之后，各个公共的JS及CSS就可以分离出来了，之前是由于模板多不好分，到一定阶段就能根据界面功能组件化生产了。怎样分离它们，由于在此环境中还没有搭配构建前端环境的grunt或是WEBPACK等工具，静态资源先一律放在express static托管上面，注意是根据共用组件命名来分类js和css，会变成重要的初始化CSS这些又可以到后面可以提取到home.handlebars或是index.handlebar上面，因为是每个模板都要用到的。

*/